/****************************************************************************
**
** Copyright (C) 2019 Luxoft Sweden AB
** Contact: https://www.qt.io/licensing/
**
** This file is part of the Neptune 3 UI.
**
** $QT_BEGIN_LICENSE:FDL-QTAS$
** Commercial License Usage
** Licensees holding valid commercial Qt Automotive Suite licenses may use
** this file in accordance with the commercial license agreement provided
** with the Software or, alternatively, in accordance with the terms
** contained in a written agreement between you and The Qt Company.  For
** licensing terms and conditions see https://www.qt.io/terms-conditions.
** For further information use the contact form at https://www.qt.io/contact-us.
**
** GNU Free Documentation License Usage
** Alternatively, this file may be used under the terms of the GNU Free
** Documentation License version 1.3 as published by the Free Software
** Foundation and appearing in the file included in the packaging of
** this file. Please review the following information to ensure
** the GNU Free Documentation License version 1.3 requirements
** will be met: https://www.gnu.org/licenses/fdl-1.3.html.
** $QT_END_LICENSE$
**
****************************************************************************/

/*!
   \page neptune3ui-companion-app.html
   \title Neptune 3 UI Companion App
   \brief Companion App for Neptune 3 UI.

   The Neptune 3 UI comes with a companion app, to supplement the main UI, that runs on desktop or
   a mobile device. This kind of app is useful, for example: the passenger in the backseat can
   modify some vehicle functions without disturbing the driver, such as air conditioning settings,
   media volume, or view the instrument cluster values.

   Neptune 3 UI's companion app allows this, and in addition provides a developer view for
   changing the instrument cluster values, for demonstration or testing purposes.

   The app connects to the same remote middleware services and utilizes the same autogenerated
   QtInterfaceFramework interfaces and mechanisms; just like Neptune 3 UI. This solution simplifies the task of
   implementing this kind of app, without requiring separate APIs and a dedicated architecture to
   access vehicle function data.

   \image companion-app.png

   \section1 Using the app

   The app is built and installed along with Neptune 3 UI. To start the app, run the
   \c neptune-companion-app executable, located in the Neptune 3 UI install directory.
   The app has a connection dialog for setting the IP address of the server. You can
   find this address in the Neptune 3 UI's \uicontrol{About} box which is shown with a tap or a
   click on the "Qt" logo in the System UI.

   The companion app expects to find both services running at the same address, and by default
   it will assume ports 9998 for the drivedata-simulation-server and 9999 for the
   remotesettings-server. If you need to use different ports, modify the settings file of the app
   by adding values for the ports as shown here:

   \badcode
   [ports]
   remoteSettingsPort=9999
   driveDataPort=9998
   \endcode

   These settings are based on \l{QSettings}; to locate the file, see
   \l{QSettings' Platform-Specific Notes}.

   \section1 App functions

   The app has five views for different value sets:
   \list
    \li Vehicle - Shows the general vehicle status and allows door operation.
    \li Media - Provides access to Media settings, like Volume and Balance.
    \li Maps - Shows information on the currently planned route.
    \li Settings - Change general UI Settings, such as language and theme.
    \li Dev - Change the Instrument Cluster's values. Useful for demonstration and
        development purposes.
   \endlist

   \section1 Run on Android

   It's possible to build and run the app on an Android system. To build it, see
   \l{Getting Started with Qt for Android} and follow the instructions.
   Use the \c settings_app_android.pro file available in Neptune 3 UI source directory.
   That project file only includes the parts required for the app.

*/
